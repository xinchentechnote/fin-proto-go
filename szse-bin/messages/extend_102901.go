// Code generated by fin-protoc. DO NOT EDIT.
package szse_bin

import (
	"bytes"
	"fmt"

	"github.com/xinchentechnote/fin-proto-go/codec"
)

func init() {
}

// Extend102901 represents the packet structure.
type Extend102901 struct {
	DeductionPbu       string `json:"DeductionPBU"`
	DeductionAccountId string `json:"DeductionAccountID"`
}

// NewExtend102901 creates a new instance of Extend102901.
func NewExtend102901() *Extend102901 {
	return &Extend102901{}
}

// String returns a string representation of the packet.
func (p *Extend102901) String() string {
	return fmt.Sprintf("Extend102901{DeductionPbu: %v, DeductionAccountId: %v}", p.DeductionPbu, p.DeductionAccountId)
}

// Encode encodes the packet into a byte slice.
func (p *Extend102901) Encode(buf *bytes.Buffer) error {
	// Implement encoding logic here.
	if err := codec.PutFixedString(buf, p.DeductionPbu, 6); err != nil {
		return err
	}
	if err := codec.PutFixedString(buf, p.DeductionAccountId, 12); err != nil {
		return err
	}
	return nil
}

// Decode decodes the packet from a byte slice.
func (p *Extend102901) Decode(buf *bytes.Buffer) error {
	if val, err := codec.GetFixedString(buf, 6); err != nil {
		return err
	} else {
		p.DeductionPbu = val
	}
	if val, err := codec.GetFixedString(buf, 12); err != nil {
		return err
	} else {
		p.DeductionAccountId = val
	}
	return nil
}
