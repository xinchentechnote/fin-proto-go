// Code generated by fin-protoc. DO NOT EDIT.
package szse_bin

import (
	"bytes"
	"fmt"

	"github.com/xinchentechnote/fin-proto-go/codec"
)

func init() {
}

// Extend102801 represents the packet structure.
type Extend102801 struct {
	LenderPbu       string `json:"LenderPBU"`
	LenderAccountId string `json:"LenderAccountID"`
}

// NewExtend102801 creates a new instance of Extend102801.
func NewExtend102801() *Extend102801 {
	return &Extend102801{}
}

// String returns a string representation of the packet.
func (p *Extend102801) String() string {
	return fmt.Sprintf("Extend102801{LenderPbu: %v, LenderAccountId: %v}", p.LenderPbu, p.LenderAccountId)
}

// Encode encodes the packet into a byte slice.
func (p *Extend102801) Encode(buf *bytes.Buffer) error {
	// Implement encoding logic here.
	if err := codec.WriteFixedString(buf, p.LenderPbu, 6); err != nil {
		return err
	}
	if err := codec.WriteFixedString(buf, p.LenderAccountId, 12); err != nil {
		return err
	}
	return nil
}

// Decode decodes the packet from a byte slice.
func (p *Extend102801) Decode(buf *bytes.Buffer) error {
	if val, err := codec.ReadFixedString(buf, 6); err != nil {
		return err
	} else {
		p.LenderPbu = val
	}
	if val, err := codec.ReadFixedString(buf, 12); err != nil {
		return err
	} else {
		p.LenderAccountId = val
	}
	return nil
}
