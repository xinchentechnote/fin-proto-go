// Code generated by fin-protoc. DO NOT EDIT.
package szse_bin

import (
	"bytes"
	"fmt"

	"github.com/xinchentechnote/fin-proto-go/codec"
)

func init() {
}

// Extend201702 represents the packet structure.
type Extend201702 struct {
	CashOrderQty int64 `json:"CashOrderQty"`
}

// NewExtend201702 creates a new instance of Extend201702.
func NewExtend201702() *Extend201702 {
	return &Extend201702{}
}

// String returns a string representation of the packet.
func (p *Extend201702) String() string {
	return fmt.Sprintf("Extend201702{CashOrderQty: %v}", p.CashOrderQty)
}

// Encode encodes the packet into a byte slice.
func (p *Extend201702) Encode(buf *bytes.Buffer) error {
	// Implement encoding logic here.
	if err := codec.PutBasicType(buf, p.CashOrderQty); err != nil {
		return fmt.Errorf("failed to encode %s: %w", "CashOrderQty", err)
	}
	return nil
}

// Decode decodes the packet from a byte slice.
func (p *Extend201702) Decode(buf *bytes.Buffer) error {
	if val, err := codec.GetBasicType[int64](buf); err != nil {
		return err
	} else {
		p.CashOrderQty = val
	}
	return nil
}
