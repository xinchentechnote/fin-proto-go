// Code generated by fin-protoc. DO NOT EDIT.
package sample_bin

import (
	"bytes"
	"fmt"
)

// InerPacket represents the packet structure.
type InerPacket struct {
	FieldU32     uint32 `json:"fieldU32"`
	FieldI16List int16  `json:"fieldI16List"`
}

// NewInerPacket creates a new instance of InerPacket.
func NewInerPacket() *InerPacket {
	return &InerPacket{}
}

// String returns a string representation of the packet.
func (p *InerPacket) String() string {
	return fmt.Sprintf("InerPacket{FieldU32: %v, FieldI16List: %v}", p.FieldU32, p.FieldI16List)
}

// Encode encodes the packet into a byte slice.
func (p *InerPacket) Encode(buf *bytes.Buffer) error {
	// Implement encoding logic here.
	return nil
}

// Decode decodes the packet from a byte slice.
func (p *InerPacket) Decode(buf *bytes.Buffer) error {
	// Implement decoding logic here.
	return nil
}

// NestedPacket represents the packet structure.
type NestedPacket struct {
	SubPacket     SubPacket `json:"SubPacket"`
	SubPacketList SubPacket `json:"SubPacketList"`
	InerPacket    `json:"InerPacket"`
}

// NewNestedPacket creates a new instance of NestedPacket.
func NewNestedPacket() *NestedPacket {
	return &NestedPacket{}
}

// String returns a string representation of the packet.
func (p *NestedPacket) String() string {
	return fmt.Sprintf("NestedPacket{SubPacket: %v, SubPacketList: %v, InerPacket: %v}", p.SubPacket, p.SubPacketList, p.InerPacket)
}

// Encode encodes the packet into a byte slice.
func (p *NestedPacket) Encode(buf *bytes.Buffer) error {
	// Implement encoding logic here.
	return nil
}

// Decode decodes the packet from a byte slice.
func (p *NestedPacket) Decode(buf *bytes.Buffer) error {
	// Implement decoding logic here.
	return nil
}
