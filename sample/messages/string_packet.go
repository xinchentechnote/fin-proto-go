// Code generated by fin-protoc. DO NOT EDIT.
package sample_bin

import (
	"bytes"
	"fmt"
)

// StringPacket represents the packet structure.
type StringPacket struct {
	FieldDynamicString      string `json:"fieldDynamicString"`
	FieldDynamicString1     string `json:"fieldDynamicString1"`
	FieldFixedString1       string `json:"fieldFixedString1"`
	FieldFixedString10      string `json:"fieldFixedString10"`
	FieldDynamicStringList  string `json:"fieldDynamicStringList"`
	FieldDynamicString1List string `json:"fieldDynamicString1List"`
	FieldFixedString1List   string `json:"fieldFixedString1List"`
	FieldFixedString10List  string `json:"fieldFixedString10List"`
}

// NewStringPacket creates a new instance of StringPacket.
func NewStringPacket() *StringPacket {
	return &StringPacket{}
}

// String returns a string representation of the packet.
func (p *StringPacket) String() string {
	return fmt.Sprintf("StringPacket{FieldDynamicString: %v, FieldDynamicString1: %v, FieldFixedString1: %v, FieldFixedString10: %v, FieldDynamicStringList: %v, FieldDynamicString1List: %v, FieldFixedString1List: %v, FieldFixedString10List: %v}", p.FieldDynamicString, p.FieldDynamicString1, p.FieldFixedString1, p.FieldFixedString10, p.FieldDynamicStringList, p.FieldDynamicString1List, p.FieldFixedString1List, p.FieldFixedString10List)
}

// Encode encodes the packet into a byte slice.
func (p *StringPacket) Encode(buf *bytes.Buffer) error {
	// Implement encoding logic here.
	return nil
}

// Decode decodes the packet from a byte slice.
func (p *StringPacket) Decode(buf *bytes.Buffer) error {
	// Implement decoding logic here.
	return nil
}
