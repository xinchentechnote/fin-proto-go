// Code generated by fin-protoc. DO NOT EDIT.
package bjse_trade_bin_test

import (
	"bytes"
	"testing"

	"github.com/stretchr/testify/assert"
	msg "github.com/xinchentechnote/fin-proto-go/bjse-trade-bin/messages"
)

func TestQuoteStatusReportCodec(t *testing.T) {

	quote1 := &msg.Quote1{
		QuoteId:    "xxxxxxxxxx",
		QuotePrice: 8,
		QuoteQty:   8,
	}
	applExtend := &msg.QuoteStatusReportExtend070{
		BranchId:          "xx",
		OrderId:           "xxxxxxxxxxxxxxxx",
		ExecId:            "xxxxxxxxxxxxxxxx",
		QuoteRespId:       "xxxxxxxxxx",
		PrivateQuote:      1,
		Side:              "x",
		PriceType:         1,
		ValidUntilTime:    8,
		CashMargin:        "x",
		CounterPartyPbuid: "xxxxxx",
		Memo:              "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
		Quote1:            []*msg.Quote1{quote1},
	}
	original := &msg.QuoteStatusReport{
		PartitionNo:      4,
		ReportIndex:      8,
		ReportingPbuid:   "xxxxxx",
		SubmittingPbuid:  "xxxxxx",
		SecurityId:       "xxxxxxxx",
		SecurityIdsource: "xxxx",
		OwnerType:        2,
		ClearingFirm:     "xx",
		TransactTime:     8,
		UserInfo:         "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
		QuoteMsgId:       "xxxxxxxxxx",
		AccountId:        "xxxxxxxxxx",
		QuoteReqId:       "xxxxxxxxxx",
		QuoteRjectReason: 8,
		QuoteType:        1,
		BidPx:            8,
		OfferPx:          8,
		BidSize:          8,
		OfferSize:        8,
		ApplId:           "070",
		ApplExtend:       applExtend,
	}
	var buf bytes.Buffer
	assert.NoError(t, original.Encode(&buf))
	var decoded msg.QuoteStatusReport
	assert.NoError(t, decoded.Decode(&buf))
	assert.Equal(t, original, &decoded)
}
