// Code generated by fin-protoc. DO NOT EDIT.
package bjse_trade_bin

import (
	"bytes"
	"fmt"

	"github.com/xinchentechnote/fin-proto-go/codec"
)

func init() {
}

// TradeCaptureReportAckExtend062 represents the packet structure.
type TradeCaptureReportAckExtend062 struct {
	CashMargin string `json:"CashMargin"`
}

// NewTradeCaptureReportAckExtend062 creates a new instance of TradeCaptureReportAckExtend062.
func NewTradeCaptureReportAckExtend062() *TradeCaptureReportAckExtend062 {
	return &TradeCaptureReportAckExtend062{}
}

// String returns a string representation of the packet.
func (p *TradeCaptureReportAckExtend062) String() string {
	return fmt.Sprintf("TradeCaptureReportAckExtend062{CashMargin: %v}", p.CashMargin)
}

// Encode encodes the packet into a byte slice.
func (p *TradeCaptureReportAckExtend062) Encode(buf *bytes.Buffer) error {
	// Implement encoding logic here.
	if err := codec.WriteFixedString(buf, p.CashMargin, 1); err != nil {
		return err
	}
	return nil
}

// Decode decodes the packet from a byte slice.
func (p *TradeCaptureReportAckExtend062) Decode(buf *bytes.Buffer) error {
	if val, err := codec.ReadFixedString(buf, 1); err != nil {
		return err
	} else {
		p.CashMargin = val
	}
	return nil
}
